import streamlit as st
import pandas as pd

# ------------------ MBTI → 진로 대분야 추천 ------------------

st.title("MBTI 기반 교육과정 설계 프로그램 🎓✨")

mbti_list = ['ISTJ', 'ISFJ', 'INFJ', 'INTJ', 'ISTP', 'ISFP', 'INFP', 'INTP',
             'ESTJ', 'ESFJ', 'ENFJ', 'ENTJ', 'ESTP', 'ESFP', 'ENFP', 'ENTP']

mbti = st.selectbox("👉 당신의 MBTI를 선택하세요", mbti_list)

mbti_career = {
    'ISTJ': ['법학', '행정', '경영', '회계'],
    'ISFJ': ['사회복지', '교육', '상담'],
    'INFJ': ['철학', '심리학', '교육학'],
    'INTJ': ['AI', '시스템공학', '의생명'],
    'ISTP': ['기계', '로봇', '산업시스템'],
    'ISFP': ['예술', '디자인', '영화영상'],
    'INFP': ['문예창작', '사학', '문화유산'],
    'INTP': ['물리학', '수학', '통계학'],
    'ESTJ': ['경찰행정', '경영정보', '공공행정'],
    'ESFJ': ['교육학', '식품산업', '광고홍보'],
    'ENFJ': ['정치외교', '언론', '사회학'],
    'ENTJ': ['경영', '국제통상', '시스템반도체'],
    'ESTP': ['건설환경', '에너지신소재', '건축'],
    'ESFP': ['연극', '영화', '예체능'],
    'ENFP': ['미디어커뮤니케이션', '국제관계'],
    'ENTP': ['컴퓨터AI', '정보통신공학']
}

st.subheader("🌟 추천 진로 대분야")
recommendations = mbti_career[mbti]
selected_major = None

for major in recommendations:
    if st.button(f"{major} 선택하기"):
        selected_major = major

# ------------------ 진로 대분야 → 필수 이수과목 추천 ------------------

major_courses = {
    '법학': ['국어', '역사', '윤리', '정치', '법'],
    '행정': ['사회문화', '정치', '법', '경제'],
    '경영': ['국어', '수학', '영어', '사회문화', '경제'],
    '회계': ['국어', '수학', '영어'],
    '사회복지': ['윤리', '사회문화', '정치', '법', '경제'],
    '교육': ['역사', '윤리', '사회문화'],
    '상담': ['윤리', '사회문화', '심리'],
    '철학': ['국어', '윤리', '한문', '철학', '논리학'],
    '심리학': ['국어', '윤리', '사회문화', '심리'],
    '교육학': ['역사', '윤리', '사회문화'],
    'AI': ['수학'],
    '시스템공학': ['수학', '물리학', '화학'],
    '의생명': ['수학', '물리학', '화학', '생명과학'],
    '기계': ['수학', '물리학', '화학'],
    '로봇': ['수학', '물리학', '화학'],
    '산업시스템': ['수학'],
    '예술': ['국어', '영어', '역사', '윤리', '사회문화', '정치', '법', '경제', '지리'],
    '디자인': ['국어', '영어', '사회문화'],
    '영화영상': ['국어', '역사', '윤리', '사회문화'],
    '문예창작': ['국어', '역사', '사회문화', '한문'],
    '사학': ['국어', '역사', '한문'],
    '문화유산': ['국어', '사회문화', '역사', '한문'],
    '물리학': ['수학', '물리학', '화학'],
    '수학': ['수학'],
    '통계학': ['수학'],
    '경찰행정': ['수학', '영어', '사회문화', '정치', '법'],
    '경영정보': ['수학', '사회문화', '경제'],
    '공공행정': ['사회문화', '정치', '법', '경제'],
    '식품산업': ['수학', '사회문화', '경제'],
    '광고홍보': ['국어', '영어', '사회문화'],
    '정치외교': ['역사', '사회문화', '정치', '법', '경제', '윤리'],
    '언론': ['국어', '사회문화', '정치', '법', '경제'],
    '사회학': ['사회문화', '윤리'],
    '국제통상': ['수학', '영어', '정치', '법', '경제', '사회문화'],
    '시스템반도체': ['수학', '물리학', '화학'],
    '건설환경': ['수학', '물리학', '화학', '지구과학'],
    '에너지신소재': ['수학', '물리학', '화학'],
    '건축': ['수학', '물리학'],
    '연극': ['국어', '영어', '역사', '윤리', '사회문화', '정치', '법', '경제', '지리'],
    '영화': ['국어', '역사', '윤리', '사회문화'],
    '예체능': ['국어', '영어', '역사', '윤리', '사회문화', '정치', '법', '경제', '지리'],
    '미디어커뮤니케이션': ['국어', '사회문화', '정치', '법', '경제'],
    '국제관계': ['국어', '사회문화', '정치', '법', '경제', '영어'],
    '컴퓨터AI': ['수학'],
    '정보통신공학': ['수학', '물리학']
}

if selected_major:
    st.subheader(f"🎯 {selected_major} 전공을 위한 추천 이수과목")
    courses = major_courses.get(selected_major, ["자료 없음"])
    st.write(", ".join(courses))

# ------------------ 교육과정 편제표 미리보기 ------------------

st.markdown("---")
st.subheader("📚 반포고 2025 교육과정 주요과목 미리보기")

# 미리 수작업으로 추출한 데이터 예시
data = {
    "교과군": ["국어", "수학", "영어", "사회", "과학", "제2외국어", "정보/AI"],
    "대표과목": [
        "화법과 언어, 독서와 작문",
        "대수, 미적분Ⅰ, 확률과 통계, 기하",
        "영어Ⅰ, 영어Ⅱ, 영미문학읽기",
        "사회문화, 세계사, 윤리와 사상",
        "물리학, 화학, 생명과학, 지구과학",
        "중국어, 일본어",
        "정보, 인공지능 기초, 데이터과학"
    ]
}

df = pd.DataFrame(data)
st.table(df)

# PDF 파일 다운로드 제공
st.markdown("---")
st.subheader("📥 전체 교육과정 편제표 다운로드")

# PDF 파일 업로드 및 다운로드 버튼 생성
st.markdown("---")
st.subheader("📥 전체 교육과정 편제표 다운로드")

uploaded_file = st.file_uploader("편제표 파일을 업로드 해주세요 (PDF)", type="pdf")

if uploaded_file is not None:
    st.download_button(
        label="업로드한 편제표 다운로드 📄",
        data=uploaded_file,
        file_name="반포고_교육과정편제표.pdf"
    )

import streamlit as st
import requests
import io

st.title("MBTI 기반 교육과정 설계 프로그램")


# 깃허브 PDF 파일 불러오기
url = "https://raw.githubusercontent.com/jiguming7/firstproject/banpo.pdf"
response = requests.get(url)
pdf_bytes = io.BytesIO(response.content)

# 다운로드 버튼 생성
st.download_button("편제표 다운로드 📄", data=pdf_bytes, file_name="반포고_교육과정편제표.pdf")
